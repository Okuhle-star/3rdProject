//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace The_Elite_Programmers_Frontend.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/CyberWatchService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Cell_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Date_Of_BirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ID_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassPort_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Profile_pictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cell_Number {
            get {
                return this.Cell_NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Cell_NumberField, value) != true)) {
                    this.Cell_NumberField = value;
                    this.RaisePropertyChanged("Cell_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Of_Birth {
            get {
                return this.Date_Of_BirthField;
            }
            set {
                if ((this.Date_Of_BirthField.Equals(value) != true)) {
                    this.Date_Of_BirthField = value;
                    this.RaisePropertyChanged("Date_Of_Birth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID_Number {
            get {
                return this.ID_NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ID_NumberField, value) != true)) {
                    this.ID_NumberField = value;
                    this.RaisePropertyChanged("ID_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassPort_Number {
            get {
                return this.PassPort_NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PassPort_NumberField, value) != true)) {
                    this.PassPort_NumberField = value;
                    this.RaisePropertyChanged("PassPort_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passwword {
            get {
                return this.PasswwordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswwordField, value) != true)) {
                    this.PasswwordField = value;
                    this.RaisePropertyChanged("Passwword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Profile_picture {
            get {
                return this.Profile_pictureField;
            }
            set {
                if ((object.ReferenceEquals(this.Profile_pictureField, value) != true)) {
                    this.Profile_pictureField = value;
                    this.RaisePropertyChanged("Profile_picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alert", Namespace="http://schemas.datacontract.org/2004/07/CyberWatchService")]
    [System.SerializableAttribute()]
    public partial class Alert : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlertIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AlertTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Crime_TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LATField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LONGIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> alertstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlertID {
            get {
                return this.AlertIDField;
            }
            set {
                if ((this.AlertIDField.Equals(value) != true)) {
                    this.AlertIDField = value;
                    this.RaisePropertyChanged("AlertID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlertTime {
            get {
                return this.AlertTimeField;
            }
            set {
                if ((this.AlertTimeField.Equals(value) != true)) {
                    this.AlertTimeField = value;
                    this.RaisePropertyChanged("AlertTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Crime_TypeID {
            get {
                return this.Crime_TypeIDField;
            }
            set {
                if ((this.Crime_TypeIDField.Equals(value) != true)) {
                    this.Crime_TypeIDField = value;
                    this.RaisePropertyChanged("Crime_TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LAT {
            get {
                return this.LATField;
            }
            set {
                if ((this.LATField.Equals(value) != true)) {
                    this.LATField = value;
                    this.RaisePropertyChanged("LAT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LONGI {
            get {
                return this.LONGIField;
            }
            set {
                if ((this.LONGIField.Equals(value) != true)) {
                    this.LONGIField = value;
                    this.RaisePropertyChanged("LONGI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> alertstatus {
            get {
                return this.alertstatusField;
            }
            set {
                if ((this.alertstatusField.Equals(value) != true)) {
                    this.alertstatusField = value;
                    this.RaisePropertyChanged("alertstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string image {
            get {
                return this.imageField;
            }
            set {
                if ((object.ReferenceEquals(this.imageField, value) != true)) {
                    this.imageField = value;
                    this.RaisePropertyChanged("image");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICyberService")]
    public interface ICyberService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/Register", ReplyAction="http://tempuri.org/ICyberService/RegisterResponse")]
        int Register(string iD_Number, string passPortNo, string type, string password, string email, string name, string surname, string address, System.DateTime DOB, string cellPhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/Register", ReplyAction="http://tempuri.org/ICyberService/RegisterResponse")]
        System.Threading.Tasks.Task<int> RegisterAsync(string iD_Number, string passPortNo, string type, string password, string email, string name, string surname, string address, System.DateTime DOB, string cellPhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/Login", ReplyAction="http://tempuri.org/ICyberService/LoginResponse")]
        int Login(string Email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/Login", ReplyAction="http://tempuri.org/ICyberService/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string Email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/GetUsers", ReplyAction="http://tempuri.org/ICyberService/GetUsersResponse")]
        The_Elite_Programmers_Frontend.ServiceReference1.User[] GetUsers(int userStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/GetUsers", ReplyAction="http://tempuri.org/ICyberService/GetUsersResponse")]
        System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.User[]> GetUsersAsync(int userStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/updateUserDetails", ReplyAction="http://tempuri.org/ICyberService/updateUserDetailsResponse")]
        int updateUserDetails(string email, string address, string cellphone, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/updateUserDetails", ReplyAction="http://tempuri.org/ICyberService/updateUserDetailsResponse")]
        System.Threading.Tasks.Task<int> updateUserDetailsAsync(string email, string address, string cellphone, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/forgottenPasswordUsingIDNumber", ReplyAction="http://tempuri.org/ICyberService/forgottenPasswordUsingIDNumberResponse")]
        int forgottenPasswordUsingIDNumber(string IDNUmber, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/forgottenPasswordUsingIDNumber", ReplyAction="http://tempuri.org/ICyberService/forgottenPasswordUsingIDNumberResponse")]
        System.Threading.Tasks.Task<int> forgottenPasswordUsingIDNumberAsync(string IDNUmber, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/forgottenPasswordUsingEmail", ReplyAction="http://tempuri.org/ICyberService/forgottenPasswordUsingEmailResponse")]
        int forgottenPasswordUsingEmail(string Email, string Password, int OTP, System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/forgottenPasswordUsingEmail", ReplyAction="http://tempuri.org/ICyberService/forgottenPasswordUsingEmailResponse")]
        System.Threading.Tasks.Task<int> forgottenPasswordUsingEmailAsync(string Email, string Password, int OTP, System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/ComfirmUSer", ReplyAction="http://tempuri.org/ICyberService/ComfirmUSerResponse")]
        int ComfirmUSer(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/ComfirmUSer", ReplyAction="http://tempuri.org/ICyberService/ComfirmUSerResponse")]
        System.Threading.Tasks.Task<int> ComfirmUSerAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/getUser", ReplyAction="http://tempuri.org/ICyberService/getUserResponse")]
        The_Elite_Programmers_Frontend.ServiceReference1.User getUser(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/getUser", ReplyAction="http://tempuri.org/ICyberService/getUserResponse")]
        System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.User> getUserAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/DeactivateUser", ReplyAction="http://tempuri.org/ICyberService/DeactivateUserResponse")]
        int DeactivateUser(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/DeactivateUser", ReplyAction="http://tempuri.org/ICyberService/DeactivateUserResponse")]
        System.Threading.Tasks.Task<int> DeactivateUserAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/VerifyEmail", ReplyAction="http://tempuri.org/ICyberService/VerifyEmailResponse")]
        bool VerifyEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/VerifyEmail", ReplyAction="http://tempuri.org/ICyberService/VerifyEmailResponse")]
        System.Threading.Tasks.Task<bool> VerifyEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/VerifyCell", ReplyAction="http://tempuri.org/ICyberService/VerifyCellResponse")]
        bool VerifyCell(string cell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/VerifyCell", ReplyAction="http://tempuri.org/ICyberService/VerifyCellResponse")]
        System.Threading.Tasks.Task<bool> VerifyCellAsync(string cell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/generateOTP", ReplyAction="http://tempuri.org/ICyberService/generateOTPResponse")]
        int generateOTP(string email, System.DateTime Time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/generateOTP", ReplyAction="http://tempuri.org/ICyberService/generateOTPResponse")]
        System.Threading.Tasks.Task<int> generateOTPAsync(string email, System.DateTime Time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/retrieveDataIDNo", ReplyAction="http://tempuri.org/ICyberService/retrieveDataIDNoResponse")]
        The_Elite_Programmers_Frontend.ServiceReference1.Alert[] retrieveDataIDNo(string Idnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/retrieveDataIDNo", ReplyAction="http://tempuri.org/ICyberService/retrieveDataIDNoResponse")]
        System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.Alert[]> retrieveDataIDNoAsync(string Idnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/retrieveDataPASSP", ReplyAction="http://tempuri.org/ICyberService/retrieveDataPASSPResponse")]
        The_Elite_Programmers_Frontend.ServiceReference1.Alert[] retrieveDataPASSP(string passport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/retrieveDataPASSP", ReplyAction="http://tempuri.org/ICyberService/retrieveDataPASSPResponse")]
        System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.Alert[]> retrieveDataPASSPAsync(string passport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/GetAlertsUnresp", ReplyAction="http://tempuri.org/ICyberService/GetAlertsUnrespResponse")]
        The_Elite_Programmers_Frontend.ServiceReference1.Alert[] GetAlertsUnresp(int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/GetAlertsUnresp", ReplyAction="http://tempuri.org/ICyberService/GetAlertsUnrespResponse")]
        System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.Alert[]> GetAlertsUnrespAsync(int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/RemoveFalseAlert", ReplyAction="http://tempuri.org/ICyberService/RemoveFalseAlertResponse")]
        int RemoveFalseAlert(int alertID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/RemoveFalseAlert", ReplyAction="http://tempuri.org/ICyberService/RemoveFalseAlertResponse")]
        System.Threading.Tasks.Task<int> RemoveFalseAlertAsync(int alertID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/ConfirmAlertorFalseA", ReplyAction="http://tempuri.org/ICyberService/ConfirmAlertorFalseAResponse")]
        int ConfirmAlertorFalseA(int alertiD, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/ConfirmAlertorFalseA", ReplyAction="http://tempuri.org/ICyberService/ConfirmAlertorFalseAResponse")]
        System.Threading.Tasks.Task<int> ConfirmAlertorFalseAAsync(int alertiD, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/addAlert", ReplyAction="http://tempuri.org/ICyberService/addAlertResponse")]
        int addAlert(int userid, string crimetype, string message, string image, decimal xcoord, decimal ycoord, System.DateTime alerttime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/addAlert", ReplyAction="http://tempuri.org/ICyberService/addAlertResponse")]
        System.Threading.Tasks.Task<int> addAlertAsync(int userid, string crimetype, string message, string image, decimal xcoord, decimal ycoord, System.DateTime alerttime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/GetUserEm", ReplyAction="http://tempuri.org/ICyberService/GetUserEmResponse")]
        The_Elite_Programmers_Frontend.ServiceReference1.User GetUserEm(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/GetUserEm", ReplyAction="http://tempuri.org/ICyberService/GetUserEmResponse")]
        System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.User> GetUserEmAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/assignRole", ReplyAction="http://tempuri.org/ICyberService/assignRoleResponse")]
        bool assignRole(int userID, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICyberService/assignRole", ReplyAction="http://tempuri.org/ICyberService/assignRoleResponse")]
        System.Threading.Tasks.Task<bool> assignRoleAsync(int userID, string role);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICyberServiceChannel : The_Elite_Programmers_Frontend.ServiceReference1.ICyberService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CyberServiceClient : System.ServiceModel.ClientBase<The_Elite_Programmers_Frontend.ServiceReference1.ICyberService>, The_Elite_Programmers_Frontend.ServiceReference1.ICyberService {
        
        public CyberServiceClient() {
        }
        
        public CyberServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CyberServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CyberServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CyberServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Register(string iD_Number, string passPortNo, string type, string password, string email, string name, string surname, string address, System.DateTime DOB, string cellPhone) {
            return base.Channel.Register(iD_Number, passPortNo, type, password, email, name, surname, address, DOB, cellPhone);
        }
        
        public System.Threading.Tasks.Task<int> RegisterAsync(string iD_Number, string passPortNo, string type, string password, string email, string name, string surname, string address, System.DateTime DOB, string cellPhone) {
            return base.Channel.RegisterAsync(iD_Number, passPortNo, type, password, email, name, surname, address, DOB, cellPhone);
        }
        
        public int Login(string Email, string password) {
            return base.Channel.Login(Email, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string Email, string password) {
            return base.Channel.LoginAsync(Email, password);
        }
        
        public The_Elite_Programmers_Frontend.ServiceReference1.User[] GetUsers(int userStatus) {
            return base.Channel.GetUsers(userStatus);
        }
        
        public System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.User[]> GetUsersAsync(int userStatus) {
            return base.Channel.GetUsersAsync(userStatus);
        }
        
        public int updateUserDetails(string email, string address, string cellphone, string Password) {
            return base.Channel.updateUserDetails(email, address, cellphone, Password);
        }
        
        public System.Threading.Tasks.Task<int> updateUserDetailsAsync(string email, string address, string cellphone, string Password) {
            return base.Channel.updateUserDetailsAsync(email, address, cellphone, Password);
        }
        
        public int forgottenPasswordUsingIDNumber(string IDNUmber, string Password) {
            return base.Channel.forgottenPasswordUsingIDNumber(IDNUmber, Password);
        }
        
        public System.Threading.Tasks.Task<int> forgottenPasswordUsingIDNumberAsync(string IDNUmber, string Password) {
            return base.Channel.forgottenPasswordUsingIDNumberAsync(IDNUmber, Password);
        }
        
        public int forgottenPasswordUsingEmail(string Email, string Password, int OTP, System.DateTime time) {
            return base.Channel.forgottenPasswordUsingEmail(Email, Password, OTP, time);
        }
        
        public System.Threading.Tasks.Task<int> forgottenPasswordUsingEmailAsync(string Email, string Password, int OTP, System.DateTime time) {
            return base.Channel.forgottenPasswordUsingEmailAsync(Email, Password, OTP, time);
        }
        
        public int ComfirmUSer(int userid) {
            return base.Channel.ComfirmUSer(userid);
        }
        
        public System.Threading.Tasks.Task<int> ComfirmUSerAsync(int userid) {
            return base.Channel.ComfirmUSerAsync(userid);
        }
        
        public The_Elite_Programmers_Frontend.ServiceReference1.User getUser(int userid) {
            return base.Channel.getUser(userid);
        }
        
        public System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.User> getUserAsync(int userid) {
            return base.Channel.getUserAsync(userid);
        }
        
        public int DeactivateUser(int userid) {
            return base.Channel.DeactivateUser(userid);
        }
        
        public System.Threading.Tasks.Task<int> DeactivateUserAsync(int userid) {
            return base.Channel.DeactivateUserAsync(userid);
        }
        
        public bool VerifyEmail(string email) {
            return base.Channel.VerifyEmail(email);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyEmailAsync(string email) {
            return base.Channel.VerifyEmailAsync(email);
        }
        
        public bool VerifyCell(string cell) {
            return base.Channel.VerifyCell(cell);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyCellAsync(string cell) {
            return base.Channel.VerifyCellAsync(cell);
        }
        
        public int generateOTP(string email, System.DateTime Time) {
            return base.Channel.generateOTP(email, Time);
        }
        
        public System.Threading.Tasks.Task<int> generateOTPAsync(string email, System.DateTime Time) {
            return base.Channel.generateOTPAsync(email, Time);
        }
        
        public The_Elite_Programmers_Frontend.ServiceReference1.Alert[] retrieveDataIDNo(string Idnumber) {
            return base.Channel.retrieveDataIDNo(Idnumber);
        }
        
        public System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.Alert[]> retrieveDataIDNoAsync(string Idnumber) {
            return base.Channel.retrieveDataIDNoAsync(Idnumber);
        }
        
        public The_Elite_Programmers_Frontend.ServiceReference1.Alert[] retrieveDataPASSP(string passport) {
            return base.Channel.retrieveDataPASSP(passport);
        }
        
        public System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.Alert[]> retrieveDataPASSPAsync(string passport) {
            return base.Channel.retrieveDataPASSPAsync(passport);
        }
        
        public The_Elite_Programmers_Frontend.ServiceReference1.Alert[] GetAlertsUnresp(int status) {
            return base.Channel.GetAlertsUnresp(status);
        }
        
        public System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.Alert[]> GetAlertsUnrespAsync(int status) {
            return base.Channel.GetAlertsUnrespAsync(status);
        }
        
        public int RemoveFalseAlert(int alertID) {
            return base.Channel.RemoveFalseAlert(alertID);
        }
        
        public System.Threading.Tasks.Task<int> RemoveFalseAlertAsync(int alertID) {
            return base.Channel.RemoveFalseAlertAsync(alertID);
        }
        
        public int ConfirmAlertorFalseA(int alertiD, int status) {
            return base.Channel.ConfirmAlertorFalseA(alertiD, status);
        }
        
        public System.Threading.Tasks.Task<int> ConfirmAlertorFalseAAsync(int alertiD, int status) {
            return base.Channel.ConfirmAlertorFalseAAsync(alertiD, status);
        }
        
        public int addAlert(int userid, string crimetype, string message, string image, decimal xcoord, decimal ycoord, System.DateTime alerttime) {
            return base.Channel.addAlert(userid, crimetype, message, image, xcoord, ycoord, alerttime);
        }
        
        public System.Threading.Tasks.Task<int> addAlertAsync(int userid, string crimetype, string message, string image, decimal xcoord, decimal ycoord, System.DateTime alerttime) {
            return base.Channel.addAlertAsync(userid, crimetype, message, image, xcoord, ycoord, alerttime);
        }
        
        public The_Elite_Programmers_Frontend.ServiceReference1.User GetUserEm(string email) {
            return base.Channel.GetUserEm(email);
        }
        
        public System.Threading.Tasks.Task<The_Elite_Programmers_Frontend.ServiceReference1.User> GetUserEmAsync(string email) {
            return base.Channel.GetUserEmAsync(email);
        }
        
        public bool assignRole(int userID, string role) {
            return base.Channel.assignRole(userID, role);
        }
        
        public System.Threading.Tasks.Task<bool> assignRoleAsync(int userID, string role) {
            return base.Channel.assignRoleAsync(userID, role);
        }
    }
}
